{"ast":null,"code":"import { TabComponent } from './../tab/tab.component';\nimport { QueryList } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\n\nconst _c0 = function (a0, a1) {\n  return {\n    \"hover:text-stone-400\": a0,\n    \"hover:text-white   text-white bg-indigo-400\": a1\n  };\n};\n\nfunction TabsContainerComponent_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 2)(1, \"a\", 3);\n    i0.ɵɵlistener(\"click\", function TabsContainerComponent_li_1_Template_a_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const tab_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.selectTab(tab_r1));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const tab_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c0, !tab_r1.activeTab, tab_r1.activeTab));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(tab_r1.tabTitle);\n  }\n}\n\nconst _c1 = [\"*\"];\nexport let TabsContainerComponent = /*#__PURE__*/(() => {\n  class TabsContainerComponent {\n    constructor() {\n      //!Targets only projected content\n      this.tabs = new QueryList();\n    }\n\n    ngAfterContentInit() {\n      const activeTabs = this.tabs?.filter(tab => tab.activeTab);\n\n      if (activeTabs.length === 0 || !activeTabs) {\n        // Sets the first tab from the queryList to active, bang operator means that its 100% sure\n        // that there will be atleast one tab\n        this.selectTab(this.tabs.first);\n      }\n    }\n    /**\n     * Sets a tab to be active\n     * @param tab\n     */\n\n\n    selectTab(tab) {\n      this.tabs?.forEach(tab => {\n        tab.activeTab = false;\n      });\n      tab.activeTab = true; // by returniung false in this context, the default behavior is prevented \n\n      return false;\n    }\n\n  }\n\n  TabsContainerComponent.ɵfac = function TabsContainerComponent_Factory(t) {\n    return new (t || TabsContainerComponent)();\n  };\n\n  TabsContainerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TabsContainerComponent,\n    selectors: [[\"app-tabs-container\"]],\n    contentQueries: function TabsContainerComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, TabComponent, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tabs = _t);\n      }\n    },\n    ngContentSelectors: _c1,\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"flex\", \"flex-wrap\", \"mb-4\"], [\"class\", \"flex-auto text-center\", 4, \"ngFor\", \"ngForOf\"], [1, \"flex-auto\", \"text-center\"], [\"href\", \"\", 1, \"block\", \"rounded\", \"py-3\", \"px-4\", \"transition\", \"hover:text-white\", \"text-white\", \"bg-orange-500\", 3, \"ngClass\", \"click\"]],\n    template: function TabsContainerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"ul\", 0);\n        i0.ɵɵtemplate(1, TabsContainerComponent_li_1_Template, 3, 5, \"li\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵprojection(2);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.tabs);\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgForOf]\n  });\n  return TabsContainerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}